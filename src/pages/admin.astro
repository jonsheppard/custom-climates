---
// Access environment variables at build time
const AUTH0_DOMAIN = import.meta.env.AUTH0_DOMAIN || '';
const AUTH0_CLIENT_ID = import.meta.env.AUTH0_CLIENT_ID || '';
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="noindex" />
    <title>Content Manager</title>
    <link href="/admin/config.yml" type="text/yaml" rel="cms-config-url" />
    <!-- Auth0 SDK -->
    <script src="https://cdn.auth0.com/js/auth0-spa-js/2.0/auth0-spa-js.production.js"></script>
    <!-- Environment variables injection -->
    <script define:vars={{ AUTH0_DOMAIN, AUTH0_CLIENT_ID }}>
      window.AUTH0_CONFIG = {
        domain: AUTH0_DOMAIN,
        clientId: AUTH0_CLIENT_ID
      };
    </script>
  </head>
  <body>
    <!-- Decap CMS script -->
    <script src="https://unpkg.com/decap-cms@^3.0.0/dist/decap-cms.js"></script>
    
    <!-- Auth0 authentication script -->
    <script>
      // Initialize Auth0
      let auth0 = null;
      
      const configureClient = async () => {
        // Access environment variables
        const AUTH0_DOMAIN = window.AUTH0_CONFIG.domain;
        const AUTH0_CLIENT_ID = window.AUTH0_CONFIG.clientId;
        
        if (!AUTH0_DOMAIN || !AUTH0_CLIENT_ID) {
          console.error('Auth0 configuration missing. Please set AUTH0_DOMAIN and AUTH0_CLIENT_ID environment variables.');
          return;
        }
        
        auth0 = await createAuth0Client({
          domain: AUTH0_DOMAIN,
          clientId: AUTH0_CLIENT_ID,
          authorizationParams: {
            redirect_uri: window.location.origin + '/admin'
          }
        });
      };

      const login = async () => {
        await auth0.loginWithRedirect();
      };

      const logout = () => {
        auth0.logout({
          logoutParams: {
            returnTo: window.location.origin
          }
        });
      };

      const handleAuthentication = async () => {
        const isAuthenticated = await auth0.isAuthenticated();
        
        if (isAuthenticated) {
          // User is logged in, CMS should load
          console.log('User authenticated with Auth0');
          return;
        }

        // Check if this is a callback from Auth0
        if (window.location.search.includes('code=') && window.location.search.includes('state=')) {
          await auth0.handleRedirectCallback();
          window.history.replaceState({}, document.title, window.location.pathname);
          return;
        }

        // User is not authenticated, redirect to login
        await login();
      };

      // Initialize Auth0 and handle authentication
      window.addEventListener('DOMContentLoaded', async () => {
        await configureClient();
        await handleAuthentication();
      });
    </script>
  </body>
</html> 